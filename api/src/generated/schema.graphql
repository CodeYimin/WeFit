### This file was generated by Nexus Schema
### Do not make changes to this file directly


type FieldError {
  field: String!
  message: String!
}

type Mutation {
  acceptFriendRequest(fromId: ID!): User!
  addWorkoutSchemaExercise(name: String!, workoutSchemaId: ID!): WorkoutSchemaExercise!
  createWorkoutRecord(exercises: [WorkoutRecordExerciseInput!]!, name: String!, workoutSchemaId: ID!): WorkoutRecord!
  createWorkoutSchema(name: String!): WorkoutSchema!
  deleteWorkoutSchema(id: String!): Boolean!
  deleteWorkoutSchemaExercise(exerciseId: ID!): WorkoutSchemaExercise!
  login(password: String!, username: String!): UserAndErrorResponse!
  logout: Boolean!
  register(password: String!, username: String!): UserAndErrorResponse!
  removeFriend(id: ID!): User!
  sendFriendRequest(username: String!): User!
  updateWorkoutSchemaExercise(data: WorkoutSchemaExerciseInput!, exerciseId: ID!): WorkoutSchemaExercise!
}

type Query {
  me: User!
  userById(id: ID!): User
  workoutRecords: [WorkoutRecord!]!
  workoutSchemaById(workoutSchemaId: ID!): WorkoutSchema!
  workoutSchemas: [WorkoutSchema!]!
}

type User {
  friends: [User!]!
  id: ID!
  incomingFriendRequests: [User!]!
  outgoingFriendRequests: [User!]
  username: String!
}

type UserAndErrorResponse {
  errors: [FieldError!]
  user: User
}

type WorkoutRecord {
  exercises: [WorkoutRecordExercise!]!
  id: ID!
  user: User!
}

type WorkoutRecordExercise {
  duration: Int!
  id: ID!
  name: String!
  reps: Int!
  weight: Float!
}

input WorkoutRecordExerciseInput {
  duration: Int!
  name: String!
  reps: Int!
  weight: Float!
}

type WorkoutSchema {
  exercises: [WorkoutSchemaExercise!]!
  id: ID!
  name: String!
  user: User!
}

type WorkoutSchemaExercise {
  duration: Int
  id: ID!
  name: String!
  reps: Int
  weight: Float
}

input WorkoutSchemaExerciseInput {
  duration: Int
  name: String
  reps: Int
  weight: Float
}